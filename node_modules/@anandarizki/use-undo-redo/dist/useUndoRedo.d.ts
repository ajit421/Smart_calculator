type Options = {
    capacity?: number;
    debounce?: number;
};
type Output<T> = [
    () => void,
    () => void,
    {
        canUndo: boolean;
        canRedo: boolean;
        reset: () => void;
        history: StateHistory<T>[];
        jumpTo: (pointer: number) => void;
        pointer: number;
    }
];
type StateHistory<T> = {
    value: T;
    timestamp: Date;
};
export declare function useUndoRedo<T>(primaryState: [T, (v: T) => void], { capacity, debounce }?: Options): Output<T>;
export {};
